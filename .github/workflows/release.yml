name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    # prevents action from running on forks
    if: github.repository == 'AaronDDM/demo-changeset'
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write # needed for provenance data generation
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      - name: Install Dependencies
        run: pnpm install

      - name: Creating .npmrc
        run: |
            cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
            EOF
        env:
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          version: pnpm changeset:version
          publish: pnpm changeset:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: slackapi/slack-github-action@v1.25.0
        # You can do something when a publish happens.
        with:
            # This data can be any valid JSON from a previous step in the GitHub Action
            payload: |
                {
                    "key": "value",
                    "foo": "bar"
                }
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
